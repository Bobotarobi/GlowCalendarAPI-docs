openapi: 3.1.0

#
# INFO
#
info:
  title: GlowCalendar
  description: |-
    GlowCalendar API Docs
  version: 0.0.1-SNAPSHOT
  
#
# SERVERS
#
servers:
  - url: 'https://api.glowcalendar.cfd/api/v1'
  
#
# ROUTES
#
paths:
  
  # Register a new user.
  /authentication/register:
    post:
    
      summary: Register a new user.
      tags:
        - Authentication
      
      requestBody:
        $ref: '#/components/requestBodies/AuthenticationRegister'
      
      responses:
      
        204:
          $ref: '#/components/responses/AuthenticationLoginSuccess'
          
        400:
          $ref: '#/components/responses/AuthenticationRegisterError'
          
        
  
  # Invalidate session (Log out)
  /authentication/logout:
    delete:
    
      summary: Invalidate session.
      tags:
        - Authentication
      
      responses:
      
        204:
          description: Logout successful.
          
        401:
          $ref: '#/components/responses/UnauthorizedError'
  
  # Login (Create new session)
  /authentication:
    post:
    
      summary: Login. Create new JWT token.
      tags:
        - Authentication
        
      requestBody:
        $ref: '#/components/requestBodies/AuthenticationLogin'
      
      security: []
      
      responses:
      
        200:
          $ref: '#/components/responses/AuthenticationLoginSuccess'
          
        400:
          description: Bad request. Invalid parameters.
          
        403:
          description: Login error (most likely, incorrect credentials)

#
# COMPONENTS
#
components:

  #
  # REQUESTS
  #
  requestBodies:
  
    #
    # AUTH
    #
    
    # Login request
    AuthenticationLogin:
      content:
        application/json:
          schema:
            type: object
            properties:
            
              username:
                type: string
                examples: 
                  - user
                
              password:
                type: string
                examples:
                  - password
    
    # Register a new user request
    AuthenticationRegister:
      content:
        application/json:
          schema:
            type: object
            properties:
            
              email:
                type: string
                examples: 
                  - survivalboomnetwork@gmail.com
            
              username:
                type: string
                examples:
                  - TIMURishche
                
              password:
                type: string
                examples:
                  - MySuperPassword228*
    
  #
  # RESPONSES
  #
  responses:
  
    #
    # AUTH
    #
    
    # Registration failed response.
    AuthenticationRegisterError:
      description: Registration failed with an error
      content:
        application/json:
          schema:
            type: object
            properties:
            
              error:
                type: string
                examples: 
                  - USERNAME_TAKEN
              
              msg:
                type: string
                examples:
                  - Username {USERNAME} is already taken
    
    
    AuthenticationLoginSuccess:
      description: Login success
      content:
        text/plain:
          schema:
            type: string
            examples: 
              - <insert JWT token example here>

    UnauthorizedError:
       description: Session is expired or not presented
  
  #
  # SECURITY
  #
  securitySchemes:
    cookieAuthentication:
      type: apiKey
      in: cookie
      name: SESSION
      
      
security:
  - cookieAuthentication: []

  
