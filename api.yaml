openapi: 3.1.0

#
# INFO
#
info:
  title: GlowCalendar
  description: |-
    GlowCalendar API Docs
  version: 0.0.1-SNAPSHOT

#
# SERVERS
#
servers:
  - url: 'https://api.glowcalendar.cfd/api/v1'

#
# ROUTES
#
paths:

  # Register a new user.
  /authentication/register:
    post:
      summary: Register a new user
      tags:
        - Authentication
      requestBody:
        $ref: '#/components/requestBodies/AuthenticationRegisterRequest'
      responses:
        204:
          description: "Registration successful. User is now needed validation of email"
        400:
          $ref: '#/components/responses/AuthenticationRegisterError'



  # Invalidate session (Log out)
  /authentication/logout:
    delete:
      summary: Invalidate session
      tags:
        - Authentication
      responses:
        204:
          description: "Logout successful"
        401:
          $ref: '#/components/responses/UnauthorizedError'

  # Authentication (Create new session)
  /authentication:
    post:
      summary: Create new session
      tags:
        - Authentication
      requestBody:
        $ref: '#/components/requestBodies/AuthenticationRequest'

      security: []

      responses:
        200:
          $ref: '#/components/responses/AuthenticationResponse'
        403:
          description: Authentication error (incorrect credentials)

  /users:


#
# COMPONENTS
#
components:

  #
  # REQUESTS
  #
  requestBodies:

    #
    # AUTHENTICATION
    #

    # Authentication request
    AuthenticationRequest:
      content:
        application/json:
          schema:
            type: object
            properties:
              email:
                type: string
                example: "balamutmaks@gmail.com"
              password:
                type: string
                example: "password"

    # Register a new user request
    AuthenticationRegisterRequest:
      content:
        application/json:
          schema:
            type: object
            properties:
              email:
                type: string
                example: "survivalboomnetwork@gmail.com"
              code:
                type: string
                example: "gj56f7nh"
              password:
                type: string
                example: "MySuperPassword228*"

  #
  # RESPONSES
  #
  responses:

    #
    # AUTHENTICATION
    #

    # Registration failed response.
    AuthenticationRegisterError:
      description: Registration failed with an error
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: "EMAIL_TAKEN"
              message:
                type: string
                example: "Email {EMAIL} is already taken"
    AuthenticationResponse:
      description: Login success
      content: {}
      headers:
        Set-Cookie:
          description: "Session cookie"
          schema:
            type: string
    UnauthorizedError:
      description: Session is expired or not presented

  #
  # SECURITY
  #
  securitySchemes:
    cookieAuthentication:
      type: apiKey
      in: cookie
      name: SESSION


security:
  - cookieAuthentication: []

